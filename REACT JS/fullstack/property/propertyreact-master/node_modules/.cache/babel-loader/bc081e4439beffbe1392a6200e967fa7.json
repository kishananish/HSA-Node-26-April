{"ast":null,"code":"import _regeneratorRuntime from \"/home/neosoft/Desktop/REACT JS/fullstack/property/propertyreact-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/neosoft/Desktop/REACT JS/fullstack/property/propertyreact-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { SET_PROFILE, SET_ERRORS, SET_ALL_PROPERTIES, SET_TOTAL_COUNT, CLEAR_PROPERTY, CLEAR_MESSAGE, SET_MESSAGE } from \"../types\";\nimport axios from \"axios\";\nexport var updateProfile = function updateProfile(profileDetails) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var profile;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                dispatch({\n                  type: CLEAR_MESSAGE\n                });\n                _context.prev = 1;\n                _context.next = 4;\n                return axios.post(\"/api/profile/update\", profileDetails);\n\n              case 4:\n                profile = _context.sent;\n                dispatch({\n                  type: SET_PROFILE,\n                  payload: profile.data\n                });\n                dispatch({\n                  type: SET_MESSAGE,\n                  payload: \"updated successfully!\"\n                }); // dispatch(setProfile(profile.data));\n\n                dispatch({\n                  type: CLEAR_MESSAGE\n                });\n                _context.next = 13;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](1);\n                dispatch({\n                  type: SET_ERRORS,\n                  payload: _context.t0.response.data\n                });\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 10]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var getProfile = function getProfile(id, history) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        var profile, propertyList;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return axios.get(\"/api/profile/\".concat(id));\n\n              case 3:\n                profile = _context2.sent;\n                _context2.next = 6;\n                return axios.get(\"/api/user/property/\".concat(id));\n\n              case 6:\n                propertyList = _context2.sent;\n                dispatch({\n                  type: SET_TOTAL_COUNT,\n                  payload: {\n                    totalCount: propertyList.data.length\n                  }\n                });\n                dispatch(setProfile(profile.data));\n                _context2.next = 15;\n                break;\n\n              case 11:\n                _context2.prev = 11;\n                _context2.t0 = _context2[\"catch\"](0);\n                history.push(\"/not-found\");\n                dispatch({\n                  type: SET_ERRORS,\n                  payload: _context2.t0.response\n                });\n\n              case 15:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 11]]);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var getCurrentProfile = function getCurrentProfile() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(dispatch) {\n        var profileData;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return axios.get(\"/api/profile/user/current\");\n\n              case 3:\n                profileData = _context3.sent;\n                dispatch({\n                  type: SET_TOTAL_COUNT,\n                  payload: profileData.data\n                });\n                dispatch(setProfile(profileData.data.profile));\n                _context3.next = 11;\n                break;\n\n              case 8:\n                _context3.prev = 8;\n                _context3.t0 = _context3[\"catch\"](0);\n                dispatch({\n                  type: SET_ERRORS,\n                  payload: _context3.t0.response.data\n                });\n\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 8]]);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var getUserPropertyList = function getUserPropertyList(currentPage, pageSize) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(dispatch) {\n        var propertiesList, totalCount;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                _context4.next = 3;\n                return axios.get(\"/api/user/property/all\", {\n                  params: {\n                    currentPage: currentPage,\n                    pageSize: pageSize\n                  }\n                });\n\n              case 3:\n                propertiesList = _context4.sent;\n                _context4.next = 6;\n                return axios.get(\"/api/user/propertyCount\");\n\n              case 6:\n                totalCount = _context4.sent;\n                dispatch({\n                  type: SET_TOTAL_COUNT,\n                  payload: totalCount.data\n                });\n                dispatch({\n                  type: SET_ALL_PROPERTIES,\n                  payload: propertiesList.data\n                });\n                _context4.next = 15;\n                break;\n\n              case 11:\n                _context4.prev = 11;\n                _context4.t0 = _context4[\"catch\"](0);\n                dispatch({\n                  type: CLEAR_PROPERTY\n                });\n                dispatch({\n                  type: SET_ERRORS,\n                  payload: _context4.t0.response.data\n                });\n\n              case 15:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[0, 11]]);\n      }));\n\n      return function (_x4) {\n        return _ref4.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var setProfile = function setProfile(profile) {\n  return {\n    type: SET_PROFILE,\n    payload: profile\n  };\n};","map":{"version":3,"sources":["/home/neosoft/Desktop/REACT JS/fullstack/property/propertyreact-master/src/store/actions/profileActions.js"],"names":["SET_PROFILE","SET_ERRORS","SET_ALL_PROPERTIES","SET_TOTAL_COUNT","CLEAR_PROPERTY","CLEAR_MESSAGE","SET_MESSAGE","axios","updateProfile","profileDetails","dispatch","type","post","profile","payload","data","response","getProfile","id","history","get","propertyList","totalCount","length","setProfile","push","getCurrentProfile","profileData","getUserPropertyList","currentPage","pageSize","params","propertiesList"],"mappings":"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","sourcesContent":["import {\n  SET_PROFILE,\n  SET_ERRORS,\n  SET_ALL_PROPERTIES,\n  SET_TOTAL_COUNT,\n  CLEAR_PROPERTY,\n  CLEAR_MESSAGE,\n  SET_MESSAGE\n} from \"../types\";\nimport axios from \"axios\";\n\nexport const updateProfile = profileDetails => async dispatch => {\n  dispatch({\n    type: CLEAR_MESSAGE\n  });\n  try {\n    const profile = await axios.post(\"/api/profile/update\", profileDetails);\n    dispatch({\n      type: SET_PROFILE,\n      payload: profile.data\n    });\n    dispatch({ type: SET_MESSAGE, payload: \"updated successfully!\" });\n    // dispatch(setProfile(profile.data));\n    dispatch({\n      type: CLEAR_MESSAGE\n    });\n  } catch (err) {\n    dispatch({\n      type: SET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getProfile = (id, history) => async dispatch => {\n  try {\n    const profile = await axios.get(`/api/profile/${id}`);\n\n    const propertyList = await axios.get(`/api/user/property/${id}`);\n\n    dispatch({\n      type: SET_TOTAL_COUNT,\n      payload: { totalCount: propertyList.data.length }\n    });\n\n    dispatch(setProfile(profile.data));\n  } catch (err) {\n    history.push(\"/not-found\");\n    dispatch({\n      type: SET_ERRORS,\n      payload: err.response\n    });\n  }\n};\n\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const profileData = await axios.get(\"/api/profile/user/current\");\n\n    dispatch({\n      type: SET_TOTAL_COUNT,\n      payload: profileData.data\n    });\n\n    dispatch(setProfile(profileData.data.profile));\n  } catch (err) {\n    dispatch({\n      type: SET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getUserPropertyList = (\n  currentPage,\n  pageSize\n) => async dispatch => {\n  try {\n    const propertiesList = await axios.get(\"/api/user/property/all\", {\n      params: { currentPage, pageSize }\n    });\n\n    const totalCount = await axios.get(\"/api/user/propertyCount\");\n\n    dispatch({\n      type: SET_TOTAL_COUNT,\n      payload: totalCount.data\n    });\n\n    dispatch({\n      type: SET_ALL_PROPERTIES,\n      payload: propertiesList.data\n    });\n  } catch (err) {\n    dispatch({\n      type: CLEAR_PROPERTY\n    });\n    dispatch({\n      type: SET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const setProfile = profile => {\n  return {\n    type: SET_PROFILE,\n    payload: profile\n  };\n};\n"]},"metadata":{},"sourceType":"module"}