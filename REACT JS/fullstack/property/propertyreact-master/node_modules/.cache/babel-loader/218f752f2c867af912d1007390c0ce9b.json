{"ast":null,"code":"import _classCallCheck from \"/home/neosoft/Desktop/REACT JS/fullstack/property/propertyreact-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/neosoft/Desktop/REACT JS/fullstack/property/propertyreact-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/neosoft/Desktop/REACT JS/fullstack/property/propertyreact-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/neosoft/Desktop/REACT JS/fullstack/property/propertyreact-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/neosoft/Desktop/REACT JS/fullstack/property/propertyreact-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/neosoft/Desktop/REACT JS/fullstack/property/propertyreact-master/src/components/GoogleMap/GoogleMap.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../store/actions\";\nimport axios from \"axios\";\nimport { Spinner } from \"reactstrap\";\nvar google_key = process.env.REACT_APP_GOOGLE_KEY;\n\nvar GoogleMap =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(GoogleMap, _React$Component);\n\n  function GoogleMap() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, GoogleMap);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(GoogleMap)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      list: []\n    };\n\n    _this.renderMap = function () {\n      loadScript(\"https://maps.googleapis.com/maps/api/js?key=\".concat(google_key, \"&callback=initMap\"));\n      window.initMap = _this.initMap;\n    };\n\n    _this.getList = function () {\n      axios.get(\"/api/property/all\", {\n        params: {\n          currentPage: 1,\n          pageSize: 10,\n          selectedFilter: \"all\"\n        }\n      }).then(function (response) {\n        _this.setState({\n          list: response.data\n        }, _this.renderMap());\n      });\n    };\n\n    _this.initMap = function () {\n      var map = new window.google.maps.Map(document.getElementById(\"map\"), {\n        center: {\n          lat: 27.2038,\n          lng: 77.5011\n        },\n        zoom: 2\n      }); //set info window\n\n      var infoWindow = new window.google.maps.InfoWindow(); // add all markers  for all properties\n\n      _this.state.list.map(function (item) {\n        var marker = new window.google.maps.Marker({\n          position: {\n            lat: parseFloat(item.mapLocation.lat),\n            lng: parseFloat(item.mapLocation.lng)\n          },\n          map: map\n        });\n        marker.addListener(\"click\", function () {\n          infoWindow.setContent(\"<div class=\\\"card\\\" style=\\\"width: 18rem;\\\">\\n        <img src=\".concat(item.imgUrl, \" class=\\\"card-img-top\\\" alt=\\\"...\\\">\\n        <div class=\\\"card-body\\\">\\n          <h5 class=\\\"card-title\\\">\").concat(item.title, \"</h5>\\n          <h6 class=\\\"card-text mb-3\\\">Address: \").concat(item.address, \"</h6>\\n          <a href=\\\"/property-detail/\").concat(item._id, \"\\\" class=\\\"btn btn-primary\\\">View Details</a>\\n        </div>\\n      </div>\"));\n          infoWindow.open(map, marker);\n        });\n        return 0;\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(GoogleMap, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getList();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          width = _this$props.width,\n          height = _this$props.height;\n      var renderComponent;\n\n      if (this.state.list.length > 0) {\n        renderComponent = React.createElement(\"div\", {\n          id: \"map\",\n          className: \"mt-5\",\n          style: {\n            width: width,\n            height: height\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        });\n      } else {\n        renderComponent = React.createElement(\"div\", {\n          style: {\n            width: \"100%\",\n            height: \"100vh\"\n          },\n          className: \"d-flex align-items-center justify-content-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, React.createElement(Spinner, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }));\n      }\n\n      return React.createElement(\"div\", {\n        className: \"mt-5\",\n        style: {\n          width: width,\n          height: height\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, renderComponent);\n    }\n  }]);\n\n  return GoogleMap;\n}(React.Component); //loadscript function to load google script\n\n\nfunction loadScript(url) {\n  var index = window.document.getElementsByTagName(\"script\")[0];\n  var script = window.document.createElement(\"script\");\n  script.src = url;\n  script.async = true;\n  script.defer = true;\n  index.parentNode.insertBefore(script, index);\n}\n\nvar mapStateToPropes = function mapStateToPropes(state) {\n  return {\n    properties: state.properties\n  };\n};\n\nexport default connect(mapStateToPropes, actions)(GoogleMap);","map":{"version":3,"sources":["/home/neosoft/Desktop/REACT JS/fullstack/property/propertyreact-master/src/components/GoogleMap/GoogleMap.jsx"],"names":["React","connect","actions","axios","Spinner","google_key","process","env","REACT_APP_GOOGLE_KEY","GoogleMap","state","list","renderMap","loadScript","window","initMap","getList","get","params","currentPage","pageSize","selectedFilter","then","response","setState","data","map","google","maps","Map","document","getElementById","center","lat","lng","zoom","infoWindow","InfoWindow","item","marker","Marker","position","parseFloat","mapLocation","addListener","setContent","imgUrl","title","address","_id","open","props","width","height","renderComponent","length","Component","url","index","getElementsByTagName","script","createElement","src","async","defer","parentNode","insertBefore","mapStateToPropes","properties"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../store/actions\";\nimport axios from \"axios\";\nimport { Spinner } from \"reactstrap\";\nconst google_key = process.env.REACT_APP_GOOGLE_KEY;\n\nclass GoogleMap extends React.Component {\n  state = {\n    list: []\n  };\n\n  componentDidMount() {\n    this.getList();\n  }\n\n  renderMap = () => {\n    loadScript(\n      `https://maps.googleapis.com/maps/api/js?key=${google_key}&callback=initMap`\n    );\n    window.initMap = this.initMap;\n  };\n\n  //get all properties list\n  getList = () => {\n    axios\n      .get(\"/api/property/all\", {\n        params: { currentPage: 1, pageSize: 10, selectedFilter: \"all\" }\n      })\n      .then(response => {\n        this.setState(\n          {\n            list: response.data\n          },\n          this.renderMap()\n        );\n      });\n  };\n\n  initMap = () => {\n    const map = new window.google.maps.Map(document.getElementById(\"map\"), {\n      center: { lat: 27.2038, lng: 77.5011 },\n      zoom: 2\n    });\n\n    //set info window\n    const infoWindow = new window.google.maps.InfoWindow();\n\n    // add all markers  for all properties\n    this.state.list.map(item => {\n      const marker = new window.google.maps.Marker({\n        position: {\n          lat: parseFloat(item.mapLocation.lat),\n          lng: parseFloat(item.mapLocation.lng)\n        },\n        map: map\n      });\n\n      marker.addListener(\"click\", function() {\n        infoWindow.setContent(`<div class=\"card\" style=\"width: 18rem;\">\n        <img src=${item.imgUrl} class=\"card-img-top\" alt=\"...\">\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">${item.title}</h5>\n          <h6 class=\"card-text mb-3\">Address: ${item.address}</h6>\n          <a href=\"/property-detail/${\n            item._id\n          }\" class=\"btn btn-primary\">View Details</a>\n        </div>\n      </div>`);\n        infoWindow.open(map, marker);\n      });\n      return 0;\n    });\n  };\n\n  render() {\n    const { width, height } = this.props;\n    let renderComponent;\n\n    if (this.state.list.length > 0) {\n      renderComponent = (\n        <div id=\"map\" className=\"mt-5\" style={{ width, height }} />\n      );\n    } else {\n      renderComponent = (\n        <div\n          style={{ width: \"100%\", height: \"100vh\" }}\n          className=\"d-flex align-items-center justify-content-center\"\n        >\n          <Spinner color=\"primary\" />\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"mt-5\" style={{ width, height }}>\n        {renderComponent}\n      </div>\n    );\n  }\n}\n\n//loadscript function to load google script\nfunction loadScript(url) {\n  const index = window.document.getElementsByTagName(\"script\")[0];\n  const script = window.document.createElement(\"script\");\n  script.src = url;\n  script.async = true;\n  script.defer = true;\n  index.parentNode.insertBefore(script, index);\n}\n\nconst mapStateToPropes = state => {\n  return {\n    properties: state.properties\n  };\n};\n\nexport default connect(\n  mapStateToPropes,\n  actions\n)(GoogleMap);\n"]},"metadata":{},"sourceType":"module"}