{"ast":null,"code":"import _regeneratorRuntime from \"/home/neosoft/Desktop/REACT JS/fullstack/property/propertyreact-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/neosoft/Desktop/REACT JS/fullstack/property/propertyreact-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { SET_PROPERTY, SET_ERRORS, CLEAR_ERRORS, SET_ALL_PROPERTIES, SET_TOTAL_COUNT, CLEAR_PROPERTY, SET_PROFILE, SET_MESSAGE, CLEAR_MESSAGE } from \"../types\";\nimport axios from \"axios\";\nimport { getUserPropertyList } from \"./profileActions\";\nexport var addProperty = function addProperty(propertyDetails) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                dispatch({\n                  type: CLEAR_ERRORS\n                });\n                dispatch({\n                  type: CLEAR_MESSAGE\n                });\n                _context.prev = 2;\n                _context.next = 5;\n                return axios.post(\"/api/property/add\", propertyDetails);\n\n              case 5:\n                res = _context.sent;\n                dispatch({\n                  type: SET_PROPERTY,\n                  payload: res.data.newProperty\n                });\n                dispatch({\n                  type: SET_MESSAGE,\n                  payload: res.data.msg\n                });\n                dispatch({\n                  type: CLEAR_MESSAGE\n                });\n                _context.next = 14;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](2);\n                dispatch({\n                  type: SET_ERRORS,\n                  payload: _context.t0.response.data\n                });\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[2, 11]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var updateProperty = function updateProperty(propertyDetails) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        var property;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                dispatch({\n                  type: CLEAR_ERRORS\n                });\n                _context2.prev = 1;\n                _context2.next = 4;\n                return axios.post(\"/api/property/update\", propertyDetails);\n\n              case 4:\n                property = _context2.sent;\n                dispatch({\n                  type: SET_PROPERTY,\n                  payload: property.data\n                });\n                _context2.next = 11;\n                break;\n\n              case 8:\n                _context2.prev = 8;\n                _context2.t0 = _context2[\"catch\"](1);\n                dispatch({\n                  type: SET_ERRORS,\n                  payload: _context2.t0.response.data\n                });\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[1, 8]]);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var deleteProperty = function deleteProperty(id) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return axios.delete(\"/api/property/delete\", {\n                  params: {\n                    id: id\n                  }\n                });\n\n              case 3:\n                dispatch(getUserPropertyList(1, 5));\n                _context3.next = 9;\n                break;\n\n              case 6:\n                _context3.prev = 6;\n                _context3.t0 = _context3[\"catch\"](0);\n                dispatch({\n                  type: SET_ERRORS,\n                  payload: _context3.t0.response.data\n                });\n\n              case 9:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 6]]);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var getAllProperties = function getAllProperties(currentPage, pageSize, selectedFilter) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(dispatch) {\n        var propertiesList, totalCount;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                dispatch({\n                  type: CLEAR_ERRORS\n                });\n                _context4.prev = 1;\n                _context4.next = 4;\n                return axios.get(\"/api/property/all\", {\n                  params: {\n                    currentPage: currentPage,\n                    pageSize: pageSize,\n                    selectedFilter: selectedFilter\n                  }\n                });\n\n              case 4:\n                propertiesList = _context4.sent;\n                _context4.next = 7;\n                return axios.get(\"/api/property/\", {\n                  params: {\n                    filter: selectedFilter\n                  }\n                });\n\n              case 7:\n                totalCount = _context4.sent;\n                dispatch({\n                  type: SET_TOTAL_COUNT,\n                  payload: totalCount.data\n                });\n                dispatch({\n                  type: SET_ALL_PROPERTIES,\n                  payload: propertiesList.data\n                });\n                _context4.next = 15;\n                break;\n\n              case 12:\n                _context4.prev = 12;\n                _context4.t0 = _context4[\"catch\"](1);\n                dispatch({\n                  type: SET_ERRORS,\n                  payload: _context4.t0.response.data\n                });\n\n              case 15:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[1, 12]]);\n      }));\n\n      return function (_x4) {\n        return _ref4.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var getProperty = function getProperty(id, history) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref5 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(dispatch) {\n        var property, profile;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n                _context5.next = 3;\n                return axios.get(\"/api/property/\".concat(id));\n\n              case 3:\n                property = _context5.sent;\n                _context5.next = 6;\n                return axios.get(\"/api/profile/\".concat(property.data.user._id));\n\n              case 6:\n                profile = _context5.sent;\n                dispatch({\n                  type: SET_PROFILE,\n                  payload: profile.data\n                });\n                dispatch({\n                  type: SET_PROPERTY,\n                  payload: property.data\n                });\n                _context5.next = 14;\n                break;\n\n              case 11:\n                _context5.prev = 11;\n                _context5.t0 = _context5[\"catch\"](0);\n                history.push(\"/not-found\");\n\n              case 14:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this, [[0, 11]]);\n      }));\n\n      return function (_x5) {\n        return _ref5.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var clearProperty = function clearProperty() {\n  return function (dispatch) {\n    dispatch({\n      type: CLEAR_PROPERTY\n    });\n  };\n};","map":{"version":3,"sources":["/home/neosoft/Desktop/REACT JS/fullstack/property/propertyreact-master/src/store/actions/propertyActions.js"],"names":["SET_PROPERTY","SET_ERRORS","CLEAR_ERRORS","SET_ALL_PROPERTIES","SET_TOTAL_COUNT","CLEAR_PROPERTY","SET_PROFILE","SET_MESSAGE","CLEAR_MESSAGE","axios","getUserPropertyList","addProperty","propertyDetails","dispatch","type","post","res","payload","data","newProperty","msg","response","updateProperty","property","deleteProperty","id","delete","params","getAllProperties","currentPage","pageSize","selectedFilter","get","propertiesList","filter","totalCount","getProperty","history","user","_id","profile","push","clearProperty"],"mappings":"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","sourcesContent":["import {\n  SET_PROPERTY,\n  SET_ERRORS,\n  CLEAR_ERRORS,\n  SET_ALL_PROPERTIES,\n  SET_TOTAL_COUNT,\n  CLEAR_PROPERTY,\n  SET_PROFILE,\n  SET_MESSAGE,\n  CLEAR_MESSAGE\n} from \"../types\";\nimport axios from \"axios\";\nimport { getUserPropertyList } from \"./profileActions\";\n\nexport const addProperty = propertyDetails => async dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n  dispatch({\n    type: CLEAR_MESSAGE\n  });\n  try {\n    const res = await axios.post(\"/api/property/add\", propertyDetails);\n\n    dispatch({\n      type: SET_PROPERTY,\n      payload: res.data.newProperty\n    });\n    dispatch({\n      type: SET_MESSAGE,\n      payload: res.data.msg\n    });\n    dispatch({\n      type: CLEAR_MESSAGE\n    });\n  } catch (err) {\n    dispatch({\n      type: SET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const updateProperty = propertyDetails => async dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n\n  try {\n    const property = await axios.post(\"/api/property/update\", propertyDetails);\n    dispatch({\n      type: SET_PROPERTY,\n      payload: property.data\n    });\n  } catch (err) {\n    dispatch({\n      type: SET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const deleteProperty = id => async dispatch => {\n  try {\n    await axios.delete(\"/api/property/delete\", {\n      params: {\n        id: id\n      }\n    });\n\n    dispatch(getUserPropertyList(1, 5));\n  } catch (err) {\n    dispatch({\n      type: SET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getAllProperties = (\n  currentPage,\n  pageSize,\n  selectedFilter\n) => async dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n\n  try {\n    const propertiesList = await axios.get(\"/api/property/all\", {\n      params: { currentPage, pageSize, selectedFilter }\n    });\n\n    const totalCount = await axios.get(\"/api/property/\", {\n      params: { filter: selectedFilter }\n    });\n\n    dispatch({\n      type: SET_TOTAL_COUNT,\n      payload: totalCount.data\n    });\n\n    dispatch({\n      type: SET_ALL_PROPERTIES,\n      payload: propertiesList.data\n    });\n  } catch (err) {\n    dispatch({\n      type: SET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getProperty = (id, history) => async dispatch => {\n  try {\n    let property = await axios.get(`/api/property/${id}`);\n\n    const profile = await axios.get(`/api/profile/${property.data.user._id}`);\n\n    dispatch({\n      type: SET_PROFILE,\n      payload: profile.data\n    });\n\n    dispatch({\n      type: SET_PROPERTY,\n      payload: property.data\n    });\n  } catch (err) {\n    history.push(\"/not-found\");\n  }\n};\n\nexport const clearProperty = () => dispatch => {\n  dispatch({\n    type: CLEAR_PROPERTY\n  });\n};\n"]},"metadata":{},"sourceType":"module"}