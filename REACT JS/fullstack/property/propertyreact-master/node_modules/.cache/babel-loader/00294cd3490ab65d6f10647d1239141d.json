{"ast":null,"code":"import _defineProperty from \"/home/neosoft/Desktop/REACT JS/fullstack/property/propertyreact-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/neosoft/Desktop/REACT JS/fullstack/property/propertyreact-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/neosoft/Desktop/REACT JS/fullstack/property/propertyreact-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/neosoft/Desktop/REACT JS/fullstack/property/propertyreact-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/neosoft/Desktop/REACT JS/fullstack/property/propertyreact-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/neosoft/Desktop/REACT JS/fullstack/property/propertyreact-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/neosoft/Desktop/REACT JS/fullstack/property/propertyreact-master/src/views/common/PropertyListPage/PropertyListPage.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../../store/actions\";\nimport { CardTwo, Pagination } from \"../../../components\";\nimport { Spinner } from \"reactstrap\";\n\nvar PropertyListPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PropertyListPage, _React$Component);\n\n  function PropertyListPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PropertyListPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PropertyListPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      currentPage: 1,\n      pageSize: 5,\n      selectedFilter: \"all\"\n    };\n\n    _this.onInputChange = function (e) {\n      _this.setState(_defineProperty({}, e.currentTarget.name, e.currentTarget.value));\n\n      if (e.currentTarget.value === \"all\") {\n        _this.props.getAllProperties(1, 5, \"all\");\n      } else if (e.currentTarget.value === \"rent\") {\n        _this.props.getAllProperties(1, 5, \"rent\");\n      } else {\n        _this.props.getAllProperties(1, 5, \"sale\");\n      }\n    };\n\n    _this.handlePageChange = function (page) {\n      _this.setState({\n        currentPage: page\n      });\n\n      _this.props.getAllProperties(page, _this.state.pageSize, _this.state.selectedFilter);\n    };\n\n    return _this;\n  }\n\n  _createClass(PropertyListPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getAllProperties(this.state.currentPage, this.state.pageSize, this.state.selectedFilter);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.clearProperty();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          pageSize = _this$state.pageSize,\n          currentPage = _this$state.currentPage;\n      var _this$props$property = this.props.property,\n          totalCount = _this$props$property.totalCount,\n          properties = _this$props$property.properties;\n      var renderComponent;\n\n      if (properties.length > 0 && Object.keys(this.props.errors).length === 0) {\n        renderComponent = properties.map(function (property) {\n          return React.createElement(CardTwo, {\n            key: property._id,\n            title: property.title,\n            propertyId: property._id,\n            agentId: property.user._id,\n            agentName: property.user.name,\n            imgUrl: property.imgUrl,\n            status: property.status,\n            address: property.address,\n            price: property.price,\n            text: property.description,\n            area: property.area,\n            beds: property.beds,\n            baths: property.baths,\n            garages: property.garages,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56\n            },\n            __self: this\n          });\n        });\n      } else {\n        if (Object.keys(this.props.errors).length > 0) {\n          renderComponent = React.createElement(\"p\", {\n            className: \"d-flex justify-content-center align-items-center text-warning display-4\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77\n            },\n            __self: this\n          }, \"No result for selected Filter\");\n        } else {\n          renderComponent = React.createElement(\"div\", {\n            style: {\n              width: \"100%\",\n              height: \"100vh\"\n            },\n            className: \"d-flex align-items-center justify-content-center\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83\n            },\n            __self: this\n          }, React.createElement(Spinner, {\n            color: \"primary\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87\n            },\n            __self: this\n          }));\n        }\n      }\n\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"display-4 my-5 text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Properties List:\", totalCount), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"exampleFormControlSelect1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Filter Properties:\"), React.createElement(\"select\", {\n        name: \"selectedFilter\",\n        onChange: this.onInputChange,\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \" \", React.createElement(\"option\", {\n        value: \"all\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"All\"), React.createElement(\"option\", {\n        value: \"rent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Rent\"), React.createElement(\"option\", {\n        value: \"sale\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Sale\")))))), React.createElement(\"div\", {\n        className: \"cards my-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, renderComponent), React.createElement(Pagination, {\n        itemsCount: totalCount,\n        pageSize: pageSize,\n        currentPage: currentPage,\n        onPageChange: this.handlePageChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return PropertyListPage;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    errors: state.errors,\n    property: state.property\n  };\n};\n\nexport default connect(mapStateToProps, actions)(PropertyListPage);","map":{"version":3,"sources":["/home/neosoft/Desktop/REACT JS/fullstack/property/propertyreact-master/src/views/common/PropertyListPage/PropertyListPage.jsx"],"names":["React","connect","actions","CardTwo","Pagination","Spinner","PropertyListPage","state","currentPage","pageSize","selectedFilter","onInputChange","e","setState","currentTarget","name","value","props","getAllProperties","handlePageChange","page","clearProperty","property","totalCount","properties","renderComponent","length","Object","keys","errors","map","_id","title","user","imgUrl","status","address","price","description","area","beds","baths","garages","width","height","Component","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../../store/actions\";\nimport { CardTwo, Pagination } from \"../../../components\";\nimport { Spinner } from \"reactstrap\";\n\nclass PropertyListPage extends React.Component {\n  state = {\n    currentPage: 1,\n    pageSize: 5,\n    selectedFilter: \"all\"\n  };\n\n  componentDidMount() {\n    this.props.getAllProperties(\n      this.state.currentPage,\n      this.state.pageSize,\n      this.state.selectedFilter\n    );\n  }\n  componentWillUnmount() {\n    this.props.clearProperty();\n  }\n  onInputChange = e => {\n    this.setState({\n      [e.currentTarget.name]: e.currentTarget.value\n    });\n\n    if (e.currentTarget.value === \"all\") {\n      this.props.getAllProperties(1, 5, \"all\");\n    } else if (e.currentTarget.value === \"rent\") {\n      this.props.getAllProperties(1, 5, \"rent\");\n    } else {\n      this.props.getAllProperties(1, 5, \"sale\");\n    }\n  };\n  handlePageChange = page => {\n    this.setState({ currentPage: page });\n    this.props.getAllProperties(\n      page,\n      this.state.pageSize,\n      this.state.selectedFilter\n    );\n  };\n\n  render() {\n    let { pageSize, currentPage } = this.state;\n\n    const { totalCount, properties } = this.props.property;\n\n    let renderComponent;\n\n    if (properties.length > 0 && Object.keys(this.props.errors).length === 0) {\n      renderComponent = properties.map(property => {\n        return (\n          <CardTwo\n            key={property._id}\n            title={property.title}\n            propertyId={property._id}\n            agentId={property.user._id}\n            agentName={property.user.name}\n            imgUrl={property.imgUrl}\n            status={property.status}\n            address={property.address}\n            price={property.price}\n            text={property.description}\n            area={property.area}\n            beds={property.beds}\n            baths={property.baths}\n            garages={property.garages}\n          />\n        );\n      });\n    } else {\n      if (Object.keys(this.props.errors).length > 0) {\n        renderComponent = (\n          <p className=\"d-flex justify-content-center align-items-center text-warning display-4\">\n            No result for selected Filter\n          </p>\n        );\n      } else {\n        renderComponent = (\n          <div\n            style={{ width: \"100%\", height: \"100vh\" }}\n            className=\"d-flex align-items-center justify-content-center\"\n          >\n            <Spinner color=\"primary\" />\n          </div>\n        );\n      }\n    }\n\n    return (\n      <div className=\"container\">\n        <h1 className=\"display-4 my-5 text-center\">\n          Properties List:{totalCount}\n        </h1>\n        <div className=\"row\">\n          <div className=\"col-6\">\n            <form>\n              <div className=\"form-group\">\n                <label htmlFor=\"exampleFormControlSelect1\">\n                  Filter Properties:\n                </label>\n                <select\n                  name=\"selectedFilter\"\n                  onChange={this.onInputChange}\n                  className=\"form-control\"\n                >\n                  {\" \"}\n                  <option value=\"all\">All</option>\n                  <option value=\"rent\">Rent</option>\n                  <option value=\"sale\">Sale</option>\n                </select>\n              </div>\n            </form>\n          </div>\n        </div>\n        <div className=\"cards my-5\">{renderComponent}</div>\n\n        <Pagination\n          itemsCount={totalCount}\n          pageSize={pageSize}\n          currentPage={currentPage}\n          onPageChange={this.handlePageChange}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    errors: state.errors,\n    property: state.property\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  actions\n)(PropertyListPage);\n"]},"metadata":{},"sourceType":"module"}