{"ast":null,"code":"import _classCallCheck from \"/home/neosoft/Desktop/REACT JS/fullstack/property/propertyreact-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/neosoft/Desktop/REACT JS/fullstack/property/propertyreact-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/neosoft/Desktop/REACT JS/fullstack/property/propertyreact-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/neosoft/Desktop/REACT JS/fullstack/property/propertyreact-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/neosoft/Desktop/REACT JS/fullstack/property/propertyreact-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/neosoft/Desktop/REACT JS/fullstack/property/propertyreact-master/src/views/agent/AgentPropertyListPage/AgentPropertyListPage.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../../store/actions\";\nimport { Pagination } from \"../../../components\";\nimport PropertyPageUI from \"./PropertyPageUI\";\nimport { AgentMenu } from \"..\";\nimport { Spinner } from \"reactstrap\";\n\nvar AgentPropertyListPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AgentPropertyListPage, _Component);\n\n  function AgentPropertyListPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AgentPropertyListPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AgentPropertyListPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      currentPage: 1,\n      pageSize: 5,\n      selectedFilter: \"all\"\n    };\n\n    _this.handlePageChange = function (page) {\n      _this.setState({\n        currentPage: page\n      });\n\n      _this.props.getUserPropertyList(page, _this.state.pageSize);\n    };\n\n    _this.deleteProperty = function (id) {\n      _this.props.deleteProperty(id);\n    };\n\n    return _this;\n  }\n\n  _createClass(AgentPropertyListPage, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.getUserPropertyList(this.state.currentPage, this.state.pageSize);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.clearError();\n      this.props.clearProperty();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          currentPage = _this$state.currentPage,\n          pageSize = _this$state.pageSize;\n      var renderComponent;\n      var _this$props$property = this.props.property,\n          totalCount = _this$props$property.totalCount,\n          properties = _this$props$property.properties;\n\n      if (Object.keys(properties).length > 0) {\n        renderComponent = React.createElement(PropertyPageUI, {\n          deleteProperty: this.deleteProperty,\n          dataList: properties,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        });\n      } else {\n        renderComponent = React.createElement(\"div\", {\n          style: {\n            width: \"100%\",\n            height: \"100vh\"\n          },\n          className: \"d-flex align-items-center justify-content-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, React.createElement(Spinner, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }));\n      }\n\n      if (Object.keys(this.props.errors).length > 0) {\n        renderComponent = React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, \"no proerties found\");\n      }\n\n      return React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(AgentMenu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"m-auto col-lg-8 col-md-8 col-sm-12  p-2 \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"display-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Total properties: \", totalCount), renderComponent, React.createElement(Pagination, {\n        itemsCount: totalCount,\n        pageSize: pageSize,\n        currentPage: currentPage,\n        onPageChange: this.handlePageChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return AgentPropertyListPage;\n}(Component);\n\nvar mapStateToPrope = function mapStateToPrope(state) {\n  return {\n    errors: state.errors,\n    property: state.property\n  };\n};\n\nexport default connect(mapStateToPrope, actions)(AgentPropertyListPage);","map":{"version":3,"sources":["/home/neosoft/Desktop/REACT JS/fullstack/property/propertyreact-master/src/views/agent/AgentPropertyListPage/AgentPropertyListPage.jsx"],"names":["React","Component","connect","actions","Pagination","PropertyPageUI","AgentMenu","Spinner","AgentPropertyListPage","state","currentPage","pageSize","selectedFilter","handlePageChange","page","setState","props","getUserPropertyList","deleteProperty","id","clearError","clearProperty","renderComponent","property","totalCount","properties","Object","keys","length","width","height","errors","mapStateToPrope"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../../store/actions\";\nimport { Pagination } from \"../../../components\";\nimport PropertyPageUI from \"./PropertyPageUI\";\nimport { AgentMenu } from \"..\";\nimport { Spinner } from \"reactstrap\";\n\nclass AgentPropertyListPage extends Component {\n  state = {\n    currentPage: 1,\n    pageSize: 5,\n    selectedFilter: \"all\"\n  };\n  componentWillMount() {\n    this.props.getUserPropertyList(this.state.currentPage, this.state.pageSize);\n  }\n  componentWillUnmount() {\n    this.props.clearError();\n    this.props.clearProperty();\n  }\n  handlePageChange = page => {\n    this.setState({ currentPage: page });\n    this.props.getUserPropertyList(page, this.state.pageSize);\n  };\n  deleteProperty = id => {\n    this.props.deleteProperty(id);\n  };\n  render() {\n    const { currentPage, pageSize } = this.state;\n\n    let renderComponent;\n    const { totalCount, properties } = this.props.property;\n\n    if (Object.keys(properties).length > 0) {\n      renderComponent = (\n        <PropertyPageUI\n          deleteProperty={this.deleteProperty}\n          dataList={properties}\n        />\n      );\n    } else {\n      renderComponent = (\n        <div\n          style={{ width: \"100%\", height: \"100vh\" }}\n          className=\"d-flex align-items-center justify-content-center\"\n        >\n          <Spinner color=\"primary\" />\n        </div>\n      );\n    }\n\n    if (Object.keys(this.props.errors).length > 0) {\n      renderComponent = <p>no proerties found</p>;\n    }\n\n    return (\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          {/* left section */}\n          <AgentMenu />\n          {/* <!-- right section --> */}\n          <div className=\"m-auto col-lg-8 col-md-8 col-sm-12  p-2 \">\n            {/* <!-- Properties List --> */}\n            <p className=\"display-4\">Total properties: {totalCount}</p>\n            {renderComponent}\n            <Pagination\n              itemsCount={totalCount}\n              pageSize={pageSize}\n              currentPage={currentPage}\n              onPageChange={this.handlePageChange}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToPrope = state => {\n  return {\n    errors: state.errors,\n    property: state.property\n  };\n};\n\nexport default connect(\n  mapStateToPrope,\n  actions\n)(AgentPropertyListPage);\n"]},"metadata":{},"sourceType":"module"}