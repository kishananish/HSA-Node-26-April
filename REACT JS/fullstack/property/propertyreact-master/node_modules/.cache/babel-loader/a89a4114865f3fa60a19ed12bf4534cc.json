{"ast":null,"code":"import _regeneratorRuntime from \"/home/neosoft/Desktop/REACT JS/fullstack/property/propertyreact-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/neosoft/Desktop/REACT JS/fullstack/property/propertyreact-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { SET_ERRORS, SET_CURRENT_USER, CLEAR_CURRENT_USER, CLEAR_ERRORS, CLEAR_MESSAGE, SET_MESSAGE } from \"../types\";\nimport axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"../../utils/setAuthToken\";\nexport var registerUser = function registerUser(userData, history) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                dispatch({\n                  type: CLEAR_MESSAGE\n                });\n                dispatch({\n                  type: CLEAR_ERRORS\n                });\n                _context.prev = 2;\n                _context.next = 5;\n                return axios.post(\"/api/user/register\", userData);\n\n              case 5:\n                res = _context.sent;\n                dispatch({\n                  type: SET_MESSAGE,\n                  payload: res.data.msg\n                });\n                dispatch({\n                  type: CLEAR_MESSAGE\n                });\n                _context.next = 14;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](2);\n                dispatch({\n                  type: SET_ERRORS,\n                  payload: _context.t0.response.data\n                });\n                dispatch({\n                  type: CLEAR_ERRORS\n                });\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[2, 10]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var loginUser = function loginUser(userData) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        var res, token, decoded;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                dispatch({\n                  type: CLEAR_ERRORS\n                });\n                _context2.prev = 1;\n                _context2.next = 4;\n                return axios.post(\"/api/user/login\", userData);\n\n              case 4:\n                res = _context2.sent;\n\n                if (res.data) {\n                  token = res.data.token;\n                  localStorage.setItem(\"jwtToken\", token);\n                  setAuthToken(token);\n                  decoded = jwt_decode(token);\n                  dispatch(setCurrentUser(decoded));\n                }\n\n                _context2.next = 11;\n                break;\n\n              case 8:\n                _context2.prev = 8;\n                _context2.t0 = _context2[\"catch\"](1);\n                dispatch({\n                  type: SET_ERRORS,\n                  payload: _context2.t0.response.data\n                });\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[1, 8]]);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var setCurrentUser = function setCurrentUser(decoded) {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\nexport var clearCurrentUser = function clearCurrentUser() {\n  return {\n    type: CLEAR_CURRENT_USER,\n    payload: {}\n  };\n}; // Log user out\n\nexport var logoutUser = function logoutUser() {\n  return function (dispatch) {\n    // Remove token from localStorage\n    localStorage.removeItem(\"jwtToken\"); // Remove auth header for future requests\n\n    setAuthToken(false); // Set current user to {} which will set isAuthenticated to false\n\n    dispatch(setCurrentUser({}));\n  };\n};\nexport var clearError = function clearError() {\n  return function (dispatch) {\n    dispatch({\n      type: CLEAR_ERRORS\n    });\n  };\n};\nexport var clearMessage = function clearMessage() {\n  return function (dispatch) {\n    dispatch({\n      type: CLEAR_MESSAGE\n    });\n  };\n};","map":{"version":3,"sources":["/home/neosoft/Desktop/REACT JS/fullstack/property/propertyreact-master/src/store/actions/authActions.js"],"names":["SET_ERRORS","SET_CURRENT_USER","CLEAR_CURRENT_USER","CLEAR_ERRORS","CLEAR_MESSAGE","SET_MESSAGE","axios","jwt_decode","setAuthToken","registerUser","userData","history","dispatch","type","post","res","payload","data","msg","response","loginUser","token","localStorage","setItem","decoded","setCurrentUser","clearCurrentUser","logoutUser","removeItem","clearError","clearMessage"],"mappings":"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","sourcesContent":["import {\n  SET_ERRORS,\n  SET_CURRENT_USER,\n  CLEAR_CURRENT_USER,\n  CLEAR_ERRORS,\n  CLEAR_MESSAGE,\n  SET_MESSAGE\n} from \"../types\";\nimport axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"../../utils/setAuthToken\";\n\nexport const registerUser = (userData, history) => async dispatch => {\n  dispatch({\n    type: CLEAR_MESSAGE\n  });\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n  try {\n    const res = await axios.post(\"/api/user/register\", userData);\n\n    dispatch({\n      type: SET_MESSAGE,\n      payload: res.data.msg\n    });\n    dispatch({\n      type: CLEAR_MESSAGE\n    });\n  } catch (err) {\n    dispatch({\n      type: SET_ERRORS,\n      payload: err.response.data\n    });\n    dispatch({\n      type: CLEAR_ERRORS\n    });\n  }\n};\n\nexport const loginUser = userData => async dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n  try {\n    const res = await axios.post(\"/api/user/login\", userData);\n    if (res.data) {\n      const { token } = res.data;\n      localStorage.setItem(\"jwtToken\", token);\n      setAuthToken(token);\n      const decoded = jwt_decode(token);\n\n      dispatch(setCurrentUser(decoded));\n    }\n  } catch (error) {\n    dispatch({\n      type: SET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\n\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\n\nexport const clearCurrentUser = () => {\n  return {\n    type: CLEAR_CURRENT_USER,\n    payload: {}\n  };\n};\n\n// Log user out\nexport const logoutUser = () => dispatch => {\n  // Remove token from localStorage\n  localStorage.removeItem(\"jwtToken\");\n  // Remove auth header for future requests\n  setAuthToken(false);\n  // Set current user to {} which will set isAuthenticated to false\n  dispatch(setCurrentUser({}));\n};\n\nexport const clearError = () => dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};\n\nexport const clearMessage = () => dispatch => {\n  dispatch({\n    type: CLEAR_MESSAGE\n  });\n};\n"]},"metadata":{},"sourceType":"module"}